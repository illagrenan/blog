version: 2
jobs:
 build-content-job:
    docker:
      - image: circleci/python:3.6.2
    working_directory: /tmp/blog
    steps:
      - checkout
      - restore_cache:
          name: Restore Python env cache (for tests and awscli)
          keys:
          - v1-venv-{{ .Branch }}-{{ checksum "./requirements.txt" }}-
          - v1-venv-{{ .Branch }}-
          - v1-venv-
      - run:
          name: Install dependencies
          command: |
            python3 -m venv /tmp/venv
            source /tmp/venv/bin/activate
            pip install --no-input --compile --exists-action=a --use-wheel --upgrade wheel setuptools awscli invoke
      - run:
          name: Install dependencies
          command: |
            source /tmp/venv/bin/activate
            pip install --no-input --compile --exists-action=a --use-wheel -r ./requirements/base.txt
      - save_cache:
          paths:
            - /tmp/venv/
          key: v1-venv-{{ .Branch }}-{{ checksum "./requirements.txt" }}-{{ epoch }}
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - published

  build-theme-job:
    working_directory: /tmp/blog
    docker:
      - image: node:9

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}-
          - v1-dependencies-{{ .Branch }}-
          - v1-dependencies-
      - run: yarn install --production=false --check-files --pure-lockfile --network-concurrency=32 --non-interactive
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}-{{ epoch }}
      - run:
          name: Install dependencies
          command: |
            gulp js --production
            gulp less --production
            gulp minify
      - attach_workspace:
          at: /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - published

 deploy-job:
    docker:
      - image: alpine
    working_directory: /tmp/blog
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install dependencies
          command: |
            cd /tmp/workspace/published
            ls
#      - run:
#          name: Deploy to S3 if tests pass and branch is Master
#          command: aws s3 sync jekyll/_site/docs s3://circle-production-static-site/docs/ --delete

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-content-job
      - build-theme-job:
          requires:
            - build-content-job
      - deploy-job:
          requires:
            - build-theme-job
          filters:
            branches:
              only: master
